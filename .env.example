# RAG Vidquest Environment Configuration
# Copy this file to .env and update with your actual values

# Application Settings
APP_NAME="RAG Vidquest"
APP_VERSION="1.0.0"
DEBUG=false
ENVIRONMENT=development

# Database Configuration
MONGODB_URL=mongodb://localhost:27017/
MONGODB_DATABASE=video_rag
QDRANT_HOST=localhost
QDRANT_PORT=6333
QDRANT_COLLECTION=video_embeddings

# Model Configuration
EMBEDDING_MODEL=all-MiniLM-L6-v2
OLLAMA_URL=http://localhost:11434/api/chat
OLLAMA_MODEL=gemma3
MAX_TOKENS=1000
TEMPERATURE=0.7

# Path Configuration
VIDEO_ROOT=./data/videos
CLIP_OUTPUT=./data/clips
FRAME_OUTPUT=./data/frames
SUBTITLE_OUTPUT=./data/subtitles

# Security Configuration
SECRET_KEY=your-super-secret-key-change-this-in-production-minimum-32-chars
API_KEY_HEADER=X-API-Key
ALLOWED_ORIGINS=["*"]
RATE_LIMIT_PER_MINUTE=60

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_FILE_PATH=./logs/rag_vidquest.log
LOG_MAX_FILE_SIZE=10485760
LOG_BACKUP_COUNT=5

# Monitoring Configuration
ENABLE_METRICS=true
METRICS_PORT=8000
HEALTH_CHECK_INTERVAL=30
ENABLE_TRACING=false
JAEGER_ENDPOINT=

# Redis Configuration (for caching and rate limiting)
REDIS_URL=redis://localhost:6379/0
REDIS_CACHE_TTL=3600

# Docker Configuration
COMPOSE_PROJECT_NAME=rag_vidquest
COMPOSE_FILE=docker-compose.yml

# Development Configuration
PYTHONPATH=.
PYTHONUNBUFFERED=1

# Testing Configuration
TEST_DATABASE_URL=mongodb://localhost:27017/test_video_rag
TEST_QDRANT_HOST=localhost
TEST_QDRANT_PORT=6333

# Production Configuration (uncomment for production)
# ENVIRONMENT=production
# DEBUG=false
# LOG_LEVEL=WARNING
# ALLOWED_ORIGINS=["https://yourdomain.com"]
# SECRET_KEY=your-production-secret-key-here
