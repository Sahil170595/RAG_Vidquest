"""
Configuration file for pytest.

Provides test discovery, coverage settings, and test configuration.
"""

import pytest
import os
import sys
from pathlib import Path

# Add src to Python path
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))

# Test configuration
def pytest_configure(config):
    """Configure pytest with custom settings."""
    config.addinivalue_line(
        "markers", "unit: mark test as a unit test"
    )
    config.addinivalue_line(
        "markers", "integration: mark test as an integration test"
    )
    config.addinivalue_line(
        "markers", "e2e: mark test as an end-to-end test"
    )
    config.addinivalue_line(
        "markers", "slow: mark test as slow running"
    )

# Pytest configuration
pytest_plugins = []

# Test collection
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# Coverage configuration
def pytest_cov_configure(config):
    """Configure coverage settings."""
    config.option.cov_source = ["src"]
    config.option.cov_report = ["term-missing", "html", "xml"]
    config.option.cov_fail_under = 80

# Async test configuration
@pytest.fixture(scope="session")
def event_loop():
    """Create an instance of the default event loop for the test session."""
    import asyncio
    loop = asyncio.get_event_loop_policy().new_event_loop()
    yield loop
    loop.close()

# Environment setup
@pytest.fixture(autouse=True)
def setup_test_environment():
    """Setup test environment variables."""
    # Set test environment
    os.environ['ENVIRONMENT'] = 'test'
    os.environ['DEBUG'] = 'true'
    os.environ['LOG_LEVEL'] = 'DEBUG'
    
    # Mock external services
    os.environ['MONGODB_URL'] = 'mongodb://localhost:27017/test_db'
    os.environ['QDRANT_HOST'] = 'localhost'
    os.environ['QDRANT_PORT'] = '6333'
    os.environ['OLLAMA_URL'] = 'http://localhost:11434/api/chat'
    os.environ['OLLAMA_MODEL'] = 'test-model'
    
    yield
    
    # Cleanup
    for key in ['ENVIRONMENT', 'DEBUG', 'LOG_LEVEL', 'MONGODB_URL', 
                'QDRANT_HOST', 'QDRANT_PORT', 'OLLAMA_URL', 'OLLAMA_MODEL']:
        os.environ.pop(key, None)
