# Docker Compose Override for Development
# This file is automatically loaded by docker compose for development overrides

version: '3.8'

services:
  rag-vidquest:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
    volumes:
      - ./src:/app/src  # Mount source code for hot reload
      - ./tests:/app/tests  # Mount tests
      - ./data:/app/data  # Mount data directory
      - ./logs:/app/logs  # Mount logs directory
    command: uvicorn src.api.app:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - mongodb
      - qdrant
      - redis
      - ollama

  # Development MongoDB with exposed ports and volumes
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=video_rag

  # Development Qdrant with exposed ports
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"  # gRPC port
    volumes:
      - qdrant_dev_data:/qdrant/data
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334

  # Development Redis with exposed ports
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --loglevel debug
    volumes:
      - redis_dev_data:/data

  # Development Ollama with exposed ports
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_dev_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    # Pre-pull models for development
    command: >
      sh -c "
        ollama serve &
        sleep 10 &&
        ollama pull gemma:2b &&
        wait
      "

  # Development tools
  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis

volumes:
  mongodb_dev_data:
  qdrant_dev_data:
  redis_dev_data:
  ollama_dev_data:
